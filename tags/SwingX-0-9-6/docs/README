Readme - SwingLabs SwingX Project - http://swingx.dev.java.net


SwingX is a library of components and utilities extending the Java Swing library; read more at our website, 
http://swingx.dev.java.net, and Wiki page, http://wiki.java.net/bin/view/Javadesktop/SwingLabsSwingX


Getting the Latest Source
=========================

1) Check out the lastest code
Download the latest release from our CVS repository; full instructions are at
https://swingx.dev.java.net/servlets/ProjectSource

but you can check out using the generic account "guest", with these settings

cvs -d :pserver:guest@cvs.dev.java.net:/cvs login

followed by

cvs -d :pserver:guest@cvs.dev.java.net:/cvs checkout swingx 


Building the Source
===================
SwingX relies on Ant and Ant build files for controlling compilation, building docs, testing, etc. You can use our Ant build scripts or use your own--some IDEs make this easy to do.

To compile from the command line, you'll need to have Apache Ant installed; see http://ant.apache.org. 

IMPORTANT: our default task in Ant also runs our unit tests, which are written using jUnit. You need to have Ant be aware of jUnit *before* compiling SwingX. We can't help you with 
this--it's an Ant configuration issue. 

If jUnit is not properly configured, you may get an error like this:
  BUILD FAILED
  c:\swingx\nbproject\build-impl.xml:407: Following error occured while executing this line
  c:\\swingx\nbproject\build-impl.xml:127: Could not create task or type of type: junit.

  Ant could not find the task or a class this task relies upon.

Suggestions: 
- for Ant 1.5.x and previous, make sure optional.jar is in your ANT_HOME\lib directory.
- for Ant 1.6.x and above, make sure ant-junit.jar is in your ANT_HOME\lib directory, and that jUnit.jar is either in that directory as well OR listed on your CLASSPATH.

You can build SwingX by going to the command line and typing
ant

That should be it--this will test and build swingx.jar in the dist directory. 


